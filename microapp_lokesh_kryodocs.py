# -*- coding: utf-8 -*-
"""Lokesh_internship_calculator

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T-9dJ0ZBD670TfFb1wckEfUdR6GrYuUy
"""

expression=input("enter an expression:")
#defining the precedence rule of operators
def prec(c):
  if(c=='*' or c=='/'):
     return 2
  elif(c=='+' or c=='-'):  
     return 1  
  else:
     return -1
#Convert the user entered infix expression to postfix expression
stack=[]
res=""
stack.append('0')
for i in expression:
     if(i.isnumeric()):
        res=res+i 
     elif(i=='('):
           stack.append(i)
     elif(i==')'):
            c=stack.pop()
            while(c!='('):
                res=res+c
                c=stack.pop()  
     else: 
          c=stack.pop()
          while((c!='0' and (prec(i)<=prec(c)))):
              res=res+c
              c=stack.pop()  
          stack.append(c)     
          stack.append(i)

c=stack.pop()                  
while(c!='0'):
    res=res+c
    c=stack.pop()
#print(res)

#Postfix expression evaluation
stack1=[]
for i in res:
   if i.isnumeric():
     stack1.append(i)
   else:
     val1=int(stack1.pop())
     val2=int(stack1.pop())
     if i=='+':
         stack1.append(val2+val1)
     elif i=='-':
         stack1.append(val2-val1)
     elif i=='*':
         stack1.append(val2*val1)
     elif i=='/':
          stack1.append(val2/val1)
print(stack1.pop())

